import { __decorate } from "tslib";
import { CommonModule } from "@angular/common";
import { NgModule } from "@angular/core";
import { DataService } from "./data.service";
import { NgPasswordValidatorComponent } from "./ng-password-validator.component";
import { NgPasswordValidatorDirective } from "./ng-password-validator.directive";
import { NgPasswordValidatorService } from "./ng-password-validator.service";
var NgPasswordValidatorModule = /** @class */ (function () {
    function NgPasswordValidatorModule() {
    }
    NgPasswordValidatorModule_1 = NgPasswordValidatorModule;
    /**
     * Password validator module
     *
     * @static
     * @param {NgPasswordValidatorOptions} initOptions
     * @returns {ModuleWithProviders<NgPasswordValidatorModule>}
     * @memberof NgPasswordValidatorModule
     */
    NgPasswordValidatorModule.forRoot = function (initOptions) {
        return {
            ngModule: NgPasswordValidatorModule_1,
            providers: [
                {
                    provide: NgPasswordValidatorService,
                    useValue: initOptions
                }
            ]
        };
    };
    var NgPasswordValidatorModule_1;
    NgPasswordValidatorModule = NgPasswordValidatorModule_1 = __decorate([
        NgModule({
            declarations: [
                NgPasswordValidatorDirective,
                NgPasswordValidatorComponent,
            ],
            imports: [
                CommonModule
            ],
            providers: [DataService],
            exports: [
                NgPasswordValidatorDirective
            ],
            entryComponents: [
                NgPasswordValidatorComponent
            ]
        })
    ], NgPasswordValidatorModule);
    return NgPasswordValidatorModule;
}());
export { NgPasswordValidatorModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctcGFzc3dvcmQtdmFsaWRhdG9yLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXBhc3N3b3JkLXZhbGlkYXRvci8iLCJzb3VyY2VzIjpbImxpYi9uZy1wYXNzd29yZC12YWxpZGF0b3IubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ2pGLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBRWpGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBaUI3RTtJQUFBO0lBcUJBLENBQUM7a0NBckJZLHlCQUF5QjtJQUVsQzs7Ozs7OztPQU9HO0lBQ0ksaUNBQU8sR0FBZCxVQUFlLFdBQXVDO1FBQ2xELE9BQU87WUFDSCxRQUFRLEVBQUUsMkJBQXlCO1lBQ25DLFNBQVMsRUFBRTtnQkFDUDtvQkFDSSxPQUFPLEVBQUUsMEJBQTBCO29CQUNuQyxRQUFRLEVBQUUsV0FBVztpQkFDeEI7YUFDSjtTQUNKLENBQUM7SUFDTixDQUFDOztJQXBCUSx5QkFBeUI7UUFoQnJDLFFBQVEsQ0FBQztZQUNOLFlBQVksRUFBRTtnQkFDViw0QkFBNEI7Z0JBQzVCLDRCQUE0QjthQUMvQjtZQUNELE9BQU8sRUFBRTtnQkFDTCxZQUFZO2FBQ2Y7WUFDRCxTQUFTLEVBQUUsQ0FBQyxXQUFXLENBQUM7WUFDeEIsT0FBTyxFQUFFO2dCQUNMLDRCQUE0QjthQUMvQjtZQUNELGVBQWUsRUFBRTtnQkFDYiw0QkFBNEI7YUFDL0I7U0FDSixDQUFDO09BQ1cseUJBQXlCLENBcUJyQztJQUFELGdDQUFDO0NBQUEsQUFyQkQsSUFxQkM7U0FyQlkseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xuaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG5pbXBvcnQgeyBEYXRhU2VydmljZSB9IGZyb20gXCIuL2RhdGEuc2VydmljZVwiO1xuaW1wb3J0IHsgTmdQYXNzd29yZFZhbGlkYXRvckNvbXBvbmVudCB9IGZyb20gXCIuL25nLXBhc3N3b3JkLXZhbGlkYXRvci5jb21wb25lbnRcIjtcbmltcG9ydCB7IE5nUGFzc3dvcmRWYWxpZGF0b3JEaXJlY3RpdmUgfSBmcm9tIFwiLi9uZy1wYXNzd29yZC12YWxpZGF0b3IuZGlyZWN0aXZlXCI7XG5pbXBvcnQgeyBOZ1Bhc3N3b3JkVmFsaWRhdG9yT3B0aW9ucyB9IGZyb20gXCIuL25nLXBhc3N3b3JkLXZhbGlkYXRvci5pbnRlcmZhY2VcIjtcbmltcG9ydCB7IE5nUGFzc3dvcmRWYWxpZGF0b3JTZXJ2aWNlIH0gZnJvbSBcIi4vbmctcGFzc3dvcmQtdmFsaWRhdG9yLnNlcnZpY2VcIjtcbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIE5nUGFzc3dvcmRWYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgICAgIE5nUGFzc3dvcmRWYWxpZGF0b3JDb21wb25lbnQsXG4gICAgXSxcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZVxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbRGF0YVNlcnZpY2VdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgTmdQYXNzd29yZFZhbGlkYXRvckRpcmVjdGl2ZVxuICAgIF0sXG4gICAgZW50cnlDb21wb25lbnRzOiBbXG4gICAgICAgIE5nUGFzc3dvcmRWYWxpZGF0b3JDb21wb25lbnRcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIE5nUGFzc3dvcmRWYWxpZGF0b3JNb2R1bGUge1xuXG4gICAgLyoqXG4gICAgICogUGFzc3dvcmQgdmFsaWRhdG9yIG1vZHVsZVxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBwYXJhbSB7TmdQYXNzd29yZFZhbGlkYXRvck9wdGlvbnN9IGluaXRPcHRpb25zXG4gICAgICogQHJldHVybnMge01vZHVsZVdpdGhQcm92aWRlcnM8TmdQYXNzd29yZFZhbGlkYXRvck1vZHVsZT59XG4gICAgICogQG1lbWJlcm9mIE5nUGFzc3dvcmRWYWxpZGF0b3JNb2R1bGVcbiAgICAgKi9cbiAgICBzdGF0aWMgZm9yUm9vdChpbml0T3B0aW9uczogTmdQYXNzd29yZFZhbGlkYXRvck9wdGlvbnMpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE5nUGFzc3dvcmRWYWxpZGF0b3JNb2R1bGU+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBOZ1Bhc3N3b3JkVmFsaWRhdG9yTW9kdWxlLFxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwcm92aWRlOiBOZ1Bhc3N3b3JkVmFsaWRhdG9yU2VydmljZSxcbiAgICAgICAgICAgICAgICAgICAgdXNlVmFsdWU6IGluaXRPcHRpb25zXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9O1xuICAgIH1cbn1cbiJdfQ==