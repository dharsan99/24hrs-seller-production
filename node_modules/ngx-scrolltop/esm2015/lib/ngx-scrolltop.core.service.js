import { DOCUMENT } from '@angular/common';
import { Inject, Injectable } from '@angular/core';
export class NgxScrollTopCoreService {
    constructor(document) {
        this.document = document;
        this.scrolledFromTop = false;
        this.isBrowser = typeof window !== 'undefined';
    }
    onWindowScroll(mode) {
        var _a, _b;
        let show = false;
        const position = ((_a = this.document.documentElement) === null || _a === void 0 ? void 0 : _a.scrollTop) || ((_b = this.document.scrollingElement) === null || _b === void 0 ? void 0 : _b.scrollTop);
        switch (mode) {
            case 'classic':
                show = this.classicMode(position);
                break;
            case 'smart':
                show = this.smartMode(position);
                break;
        }
        return show;
    }
    classicMode(position) {
        let show = false;
        if (this.isBrowser && position > window.innerHeight) {
            show = true;
        }
        else {
            show = false;
        }
        return show;
    }
    smartMode(position) {
        let show = false;
        if (position === 0) {
            show = false;
            this.scrolledFromTop = false;
        }
        if (this.scrolledFromTop && this.scrollOffset > position) {
            show = true;
        }
        if (this.isBrowser && position > window.innerHeight * 2) {
            this.scrolledFromTop = true;
            this.scrollOffset = position;
        }
        return show;
    }
    scrollToTop() {
        if (this.isBrowser) {
            window.scroll({ top: 0, left: 0, behavior: 'smooth' });
        }
    }
}
NgxScrollTopCoreService.decorators = [
    { type: Injectable }
];
NgxScrollTopCoreService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXNjcm9sbHRvcC5jb3JlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtc2Nyb2xsdG9wL3NyYy9saWIvbmd4LXNjcm9sbHRvcC5jb3JlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSW5ELE1BQU0sT0FBTyx1QkFBdUI7SUFLbEMsWUFBc0MsUUFBYTtRQUFiLGFBQVEsR0FBUixRQUFRLENBQUs7UUFKM0Msb0JBQWUsR0FBRyxLQUFLLENBQUM7UUFFZixjQUFTLEdBQVksT0FBTyxNQUFNLEtBQUssV0FBVyxDQUFDO0lBRWQsQ0FBQztJQUVoRCxjQUFjLENBQUMsSUFBc0I7O1FBQzFDLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQztRQUNqQixNQUFNLFFBQVEsR0FDWixPQUFBLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSwwQ0FBRSxTQUFTLFlBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsMENBQUUsU0FBUyxDQUFBLENBQUM7UUFDeEYsUUFBUSxJQUFJLEVBQUU7WUFDWixLQUFLLFNBQVM7Z0JBQ1osSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ2xDLE1BQU07WUFDUixLQUFLLE9BQU87Z0JBQ1YsSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ2hDLE1BQU07U0FDVDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVPLFdBQVcsQ0FBQyxRQUFnQjtRQUNsQyxJQUFJLElBQUksR0FBRyxLQUFLLENBQUM7UUFDakIsSUFBSSxJQUFJLENBQUMsU0FBUyxJQUFJLFFBQVEsR0FBRyxNQUFNLENBQUMsV0FBVyxFQUFFO1lBQ25ELElBQUksR0FBRyxJQUFJLENBQUM7U0FDYjthQUFNO1lBQ0wsSUFBSSxHQUFHLEtBQUssQ0FBQztTQUNkO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU8sU0FBUyxDQUFDLFFBQWdCO1FBQ2hDLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQztRQUNqQixJQUFJLFFBQVEsS0FBSyxDQUFDLEVBQUU7WUFDbEIsSUFBSSxHQUFHLEtBQUssQ0FBQztZQUNiLElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO1NBQzlCO1FBRUQsSUFBSSxJQUFJLENBQUMsZUFBZSxJQUFJLElBQUksQ0FBQyxZQUFZLEdBQUcsUUFBUSxFQUFFO1lBQ3hELElBQUksR0FBRyxJQUFJLENBQUM7U0FDYjtRQUVELElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxRQUFRLEdBQUcsTUFBTSxDQUFDLFdBQVcsR0FBRyxDQUFDLEVBQUU7WUFDdkQsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7WUFDNUIsSUFBSSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUM7U0FDOUI7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxXQUFXO1FBQ2hCLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNsQixNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1NBQ3hEO0lBQ0gsQ0FBQzs7O1lBeERGLFVBQVU7Ozs0Q0FNSSxNQUFNLFNBQUMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERPQ1VNRU5UIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmd4U2Nyb2xsVG9wTW9kZSB9IGZyb20gJy4vbmd4LXNjcm9sbHRvcC5pbnRlcmZhY2UnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTmd4U2Nyb2xsVG9wQ29yZVNlcnZpY2Uge1xuICBwcml2YXRlIHNjcm9sbGVkRnJvbVRvcCA9IGZhbHNlO1xuICBwcml2YXRlIHNjcm9sbE9mZnNldDogbnVtYmVyO1xuICBwcml2YXRlIHJlYWRvbmx5IGlzQnJvd3NlcjogYm9vbGVhbiA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnO1xuXG4gIGNvbnN0cnVjdG9yKEBJbmplY3QoRE9DVU1FTlQpIHByaXZhdGUgZG9jdW1lbnQ6IGFueSkge31cblxuICBwdWJsaWMgb25XaW5kb3dTY3JvbGwobW9kZTogTmd4U2Nyb2xsVG9wTW9kZSk6IGJvb2xlYW4ge1xuICAgIGxldCBzaG93ID0gZmFsc2U7XG4gICAgY29uc3QgcG9zaXRpb246IG51bWJlciA9XG4gICAgICB0aGlzLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudD8uc2Nyb2xsVG9wIHx8IHRoaXMuZG9jdW1lbnQuc2Nyb2xsaW5nRWxlbWVudD8uc2Nyb2xsVG9wO1xuICAgIHN3aXRjaCAobW9kZSkge1xuICAgICAgY2FzZSAnY2xhc3NpYyc6XG4gICAgICAgIHNob3cgPSB0aGlzLmNsYXNzaWNNb2RlKHBvc2l0aW9uKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzbWFydCc6XG4gICAgICAgIHNob3cgPSB0aGlzLnNtYXJ0TW9kZShwb3NpdGlvbik7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gc2hvdztcbiAgfVxuXG4gIHByaXZhdGUgY2xhc3NpY01vZGUocG9zaXRpb246IG51bWJlcik6IGJvb2xlYW4ge1xuICAgIGxldCBzaG93ID0gZmFsc2U7XG4gICAgaWYgKHRoaXMuaXNCcm93c2VyICYmIHBvc2l0aW9uID4gd2luZG93LmlubmVySGVpZ2h0KSB7XG4gICAgICBzaG93ID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2hvdyA9IGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gc2hvdztcbiAgfVxuXG4gIHByaXZhdGUgc21hcnRNb2RlKHBvc2l0aW9uOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICBsZXQgc2hvdyA9IGZhbHNlO1xuICAgIGlmIChwb3NpdGlvbiA9PT0gMCkge1xuICAgICAgc2hvdyA9IGZhbHNlO1xuICAgICAgdGhpcy5zY3JvbGxlZEZyb21Ub3AgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5zY3JvbGxlZEZyb21Ub3AgJiYgdGhpcy5zY3JvbGxPZmZzZXQgPiBwb3NpdGlvbikge1xuICAgICAgc2hvdyA9IHRydWU7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaXNCcm93c2VyICYmIHBvc2l0aW9uID4gd2luZG93LmlubmVySGVpZ2h0ICogMikge1xuICAgICAgdGhpcy5zY3JvbGxlZEZyb21Ub3AgPSB0cnVlO1xuICAgICAgdGhpcy5zY3JvbGxPZmZzZXQgPSBwb3NpdGlvbjtcbiAgICB9XG5cbiAgICByZXR1cm4gc2hvdztcbiAgfVxuXG4gIHB1YmxpYyBzY3JvbGxUb1RvcCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5pc0Jyb3dzZXIpIHtcbiAgICAgIHdpbmRvdy5zY3JvbGwoeyB0b3A6IDAsIGxlZnQ6IDAsIGJlaGF2aW9yOiAnc21vb3RoJyB9KTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==